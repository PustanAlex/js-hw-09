{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAyBbO,SAASC,cAAc,SAASC,iBAAiB,UArBjDC,eAAgCC,GAC9BA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAASH,EAAMI,QAC9BC,EAAaC,SAASJ,EAASK,IAAI,UACnCC,EAAYF,SAASJ,EAASK,IAAI,SAClCE,EAASH,SAASJ,EAASK,IAAI,WAErC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAChC,MAAMtB,EAAWsB,EACXrB,EAAQgB,GAAcK,EAAI,GAAKF,EAErC,IACE,MAAMG,QAAexB,EAAcC,EAAUC,GAC7CuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBH,EAAIvB,eAAoBuB,EAAEtB,U,CACvE,MAAO0B,GACPH,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBD,EAAE3B,eAAmB2B,EAAE1B,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nasync function handleFormSubmit(event) {\n  event.preventDefault();\n  \n  const formData = new FormData(event.target);\n  const firstDelay = parseInt(formData.get('delay'));\n  const delayStep = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const delay = firstDelay + (i - 1) * delayStep;\n\n    try {\n      const result = await createPromise(position, delay);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n    } catch (error) {\n      Notiflix.Notify.failure(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n    }\n  }\n}\n\ndocument.querySelector('.form').addEventListener('submit', handleFormSubmit);"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","async","event","preventDefault","formData","FormData","target","firstDelay","parseInt","get","delayStep","amount","i","result","$parcel$interopDefault","Notify","success","error","failure"],"version":3,"file":"03-promises.b5f093f5.js.map"}